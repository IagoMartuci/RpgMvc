@model RpgMvc.Models.UsuarioViewModel
@{
    ViewBag.Title = "Informações do Usuário";
}
@if (@TempData["Mensagem"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["Mensagem"]</div>
}
<!--Configuração para exibir mensagem de erro -->
@if (@TempData["MensagemErro"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["MensagemErro"]</div>
}
<h2>Detalhes do Usuário</h2>
<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>@Html.DisplayNameFor(model => model.Id)</dt>
        <dd>@Html.DisplayFor(model => model.Id)</dd>

        <dt>@Html.DisplayNameFor(model => model.UserName)</dt>
        <dd>@Html.DisplayFor(model => model.UserName)</dd>

        <dt>@Html.DisplayNameFor(model => model.Email)</dt>
        <dd>@Html.DisplayFor(model => model.Email)</dd>

        <dt>@Html.DisplayNameFor(model => model.DataAcesso)</dt>
        <dd>@Html.DisplayFor(model => model.DataAcesso)</dd>

        @if (Model.Foto != null)
        {
            var base64 = Convert.ToBase64String(Model.Foto);
            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);

            <dt>@Html.DisplayNameFor(model => model.Foto)</dt>
            <img src="@imgSrc" title="@Model.UserName" width="100" height="132" />
            <br />
            @Html.ActionLink("Baixar Foto", "BaixarFoto", "Usuarios", null, new {@title = "Clique para fazer o download"})
        }
    </dl>
</div>
<!-- <br /> Opicional -->
<button onclick="AlterarEmail();" type="button" class="btn btn-primary">
    Alterar E-mail
</button>
<button onclick="AbrirModalAlterarSenha();" type="button" class="btn btn-primary">
    Alterar Senha
</button>
<hr />
@using (Html.BeginForm("EnviarFoto", "Usuarios", FormMethod.Post, new
{ enctype = "multipart/form-data", id = "formFoto" }))
{
    <div class="row">
        <div class="col-sm-3">
            <h3>Envio de foto</h3>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            @Html.TextBox("file", "", new { type = "file" })
            @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @class =
        "form-control" } })
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3 mt-3">
            <button id="FotoSubmit" type="submit" value="Enviar Foto" class="btn btn-success">
                Enviar Foto
            </button>
        </div>
    </div>
}
<hr>
<p class="mt-3">
    @Html.ActionLink("Voltar ao Início", "Index", "Personagens", null, new {@class = "btn btn-warning"})
    <!-- @Html.ActionLink("Voltar ao Início", "Index", "Personagens") -->
</p>

<!--Conteúdo do modal popup-->
<div class="modal fade bd-example-modal-lg" id="modalInterno" tabindex="-1" role="dialog"
    aria-labelledby="modalInternoLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalInternoLabel">Alteração de E-mail</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" arialabel="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("AlterarEmail", "Usuarios", FormMethod.Post))
                {
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class ="control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Id, new { htmlAttributes = new
                            { @class = "form-control",
                            @readonly = "readonly" }})
                            </div>
                        </div><br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class= "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes =
                            new { @class = "form-control", @type = "Email" }})
                            </div>
                        </div><br />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-6">
                                <input type="submit" value="Salvar" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Modal externo -->
<div class="modal" id="modalExterno" tabindex="-1" role="dialog" arialabelledby="modalExternoLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalExternoLabel">
                    @TempData["TituloModalExterno"]
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" arialabel="Close">
                </button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    function AlterarEmail() {
        $("#modalInterno").modal("show");
    }

    function AbrirModalAlterarSenha() {
        $.ajax({
            url: "@Url.Action("ObterDadosAlteracaoSenha", "Usuarios")",
            //data: { nomeProp1: valorProp1, nomeProp2: valorProp2, },
            success: function (retorno) {
                $("#modalExterno .modal-dialog .modal-content .modal-body").html(retorno);
                $("#modalExterno").modal("show");
            }
        });
    }
</script>